{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINES\\\\Desktop\\\\ai-todo-app\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:5000/api/auth/reset-password/${token}`, {\n        newPassword\n      });\n      setMessage(response.data.message);\n    } catch (err) {\n      setMessage('Error resetting password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex justify-content-center align-items-center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-4 shadow\",\n      style: {\n        maxWidth: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mb-4\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            className: \"form-label\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"newPassword\",\n            className: \"form-control\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            placeholder: \"Enter your new password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert mt-3 ${message.toLowerCase().includes('error') ? 'alert-danger' : 'alert-success'}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"jenJjdfZR7RU9Jr3XTTOwXLqAKI=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","token","newPassword","setNewPassword","message","setMessage","handleSubmit","e","preventDefault","response","post","data","err","className","style","minHeight","children","maxWidth","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","toLowerCase","includes","_c","$RefreshReg$"],"sources":["C:/Users/ENGINES/Desktop/ai-todo-app/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/auth/reset-password/${token}`,\r\n        { newPassword }\r\n      );\r\n      setMessage(response.data.message);\r\n    } catch (err) {\r\n      setMessage('Error resetting password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n      <div className=\"card p-4 shadow\" style={{ maxWidth: '400px', width: '100%' }}>\r\n        <h3 className=\"text-center mb-4\">Reset Password</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"newPassword\" className=\"form-label\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              className=\"form-control\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              placeholder=\"Enter your new password\"\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary w-100\">Reset Password</button>\r\n        </form>\r\n        {message && (\r\n          <div className={`alert mt-3 ${message.toLowerCase().includes('error') ? 'alert-danger' : 'alert-success'}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}