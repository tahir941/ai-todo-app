{"ast":null,"code":"// src/redux/slices/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Load token and user from localStorage (optional: user persistence)\nconst token = localStorage.getItem('token');\nconst user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\nconst initialState = {\n  user: user,\n  token: token || null,\n  status: 'idle',\n  // 'idle' | 'loading' | 'succeeded' | 'failed'\n  error: null\n};\n\n// Async thunk for login\nexport const loginUser = createAsyncThunk('auth/loginUser', async ({\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/auth/login', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    // Save token and user to localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return thunkAPI.rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\n\n// Async thunk for register\nexport const registerUser = createAsyncThunk('auth/registerUser', async ({\n  username,\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/auth/register', {\n      username,\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    // Save token and user to localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return thunkAPI.rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n      state.error = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // login\n    .addCase(loginUser.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n\n    // register\n    .addCase(registerUser.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","token","localStorage","getItem","user","JSON","parse","initialState","status","error","loginUser","email","password","thunkAPI","response","post","data","setItem","stringify","_error$response","_error$response$data","rejectWithValue","registerUser","username","_error$response2","_error$response2$data","authSlice","name","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/ENGINES/Desktop/ai-todo-app/client/src/redux/slices/authSlice.js"],"sourcesContent":["// src/redux/slices/authSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Load token and user from localStorage (optional: user persistence)\r\nconst token = localStorage.getItem('token');\r\nconst user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\nconst initialState = {\r\n  user: user,\r\n  token: token || null,\r\n  status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed'\r\n  error: null,\r\n};\r\n\r\n// Async thunk for login\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/loginUser',\r\n  async ({ email, password }, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      const { token, user } = response.data;\r\n      // Save token and user to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return { token, user };\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data?.error || 'Login failed'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk for register\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/registerUser',\r\n  async ({ username, email, password }, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      const { token, user } = response.data;\r\n      // Save token and user to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return { token, user };\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data?.error || 'Registration failed'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.status = 'idle';\r\n      state.error = null;\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.status = 'loading';\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // register\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.status = 'loading';\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}