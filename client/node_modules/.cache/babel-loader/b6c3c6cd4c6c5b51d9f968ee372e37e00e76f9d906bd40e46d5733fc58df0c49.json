{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINES\\\\Desktop\\\\ai-todo-app\\\\client\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../redux/slices/authSlice';\nimport { useNavigate } from 'react-router-dom'; // ðŸ”¥ Add this to handle redirects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const {\n    error,\n    status\n  } = useSelector(state => state.auth);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const action = await dispatch(registerUser(formData));\n      if (registerUser.fulfilled.match(action)) {\n        // Registration was successful ðŸŽ‰\n        alert('Registration successful! Please log in.');\n        navigate('/login'); // Redirect to login\n      } else {\n        // Registration failed ðŸš¨\n        console.error(action.payload || 'Registration failed');\n      }\n    } catch (err) {\n      console.error('Unexpected error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: formData.username,\n      onChange: e => setFormData({\n        ...formData,\n        username: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), status === 'failed' && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error || 'Registration failed. Please try again.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"JUGZV28amLVq9aBr28cEYVdc5X4=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","registerUser","useNavigate","jsxDEV","_jsxDEV","RegisterForm","_s","dispatch","navigate","formData","setFormData","username","email","password","error","status","state","auth","handleSubmit","e","preventDefault","action","fulfilled","match","alert","console","payload","err","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ENGINES/Desktop/ai-todo-app/client/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/slices/authSlice';\r\nimport { useNavigate } from 'react-router-dom';  // ðŸ”¥ Add this to handle redirects\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({ username: '', email: '', password: '' });\r\n    const { error, status } = useSelector(state => state.auth);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const action = await dispatch(registerUser(formData));\r\n            if (registerUser.fulfilled.match(action)) {\r\n                // Registration was successful ðŸŽ‰\r\n                alert('Registration successful! Please log in.');\r\n                navigate('/login');  // Redirect to login\r\n            } else {\r\n                // Registration failed ðŸš¨\r\n                console.error(action.payload || 'Registration failed');\r\n            }\r\n        } catch (err) {\r\n            console.error('Unexpected error:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Username\" value={formData.username} onChange={e => setFormData({ ...formData, username: e.target.value })} required />\r\n            <input type=\"email\" placeholder=\"Email\" value={formData.email} onChange={e => setFormData({ ...formData, email: e.target.value })} required />\r\n            <input type=\"password\" placeholder=\"Password\" value={formData.password} onChange={e => setFormData({ ...formData, password: e.target.value })} required />\r\n            <button type=\"submit\">Register</button>\r\n            {status === 'failed' && <p style={{ color: 'red' }}>{error || 'Registration failed. Please try again.'}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}