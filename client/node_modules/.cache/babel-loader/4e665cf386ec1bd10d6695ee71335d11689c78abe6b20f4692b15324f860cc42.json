{"ast":null,"code":"// client/src/slices/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { register, login } from '../api/auth'; // Updated path for imports if needed\n\n// Async thunks for register and login\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await register(userData);\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await login(userData);\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: localStorage.getItem('token') || null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(registerUser.rejected, (state, action) => {\n      var _action$payload;\n      state.status = 'failed';\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.error) || 'Registration failed';\n    }).addCase(loginUser.rejected, (state, action) => {\n      var _action$payload2;\n      state.status = 'failed';\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.error) || 'Login failed';\n    }).addCase(registerUser.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginUser.pending, state => {\n      state.status = 'loading';\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","register","login","registerUser","userData","rejectWithValue","response","localStorage","setItem","data","token","err","loginUser","authSlice","name","initialState","user","getItem","status","error","reducers","logout","state","removeItem","extraReducers","builder","addCase","fulfilled","action","payload","rejected","_action$payload","_action$payload2","pending","actions","reducer"],"sources":["C:/Users/ENGINES/Desktop/ai-todo-app/client/src/redux/slices/authSlice.js"],"sourcesContent":["// client/src/slices/authSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { register, login } from '../api/auth';  // Updated path for imports if needed\r\n\r\n// Async thunks for register and login\r\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, { rejectWithValue }) => {\r\n    try {\r\n        const response = await register(userData);\r\n        localStorage.setItem('token', response.data.token);\r\n        return response.data;\r\n    } catch (err) {\r\n        return rejectWithValue(err.response.data);\r\n    }\r\n});\r\n\r\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, { rejectWithValue }) => {\r\n    try {\r\n        const response = await login(userData);\r\n        localStorage.setItem('token', response.data.token);\r\n        return response.data;\r\n    } catch (err) {\r\n        return rejectWithValue(err.response.data);\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        user: null,\r\n        token: localStorage.getItem('token') || null,\r\n        status: 'idle',\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.user = null;\r\n            state.token = null;\r\n            localStorage.removeItem('token');\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(registerUser.fulfilled, (state, action) => {\r\n                state.user = action.payload.user;\r\n                state.token = action.payload.token;\r\n                state.status = 'succeeded';\r\n                state.error = null;\r\n            })\r\n            .addCase(loginUser.fulfilled, (state, action) => {\r\n                state.user = action.payload.user;\r\n                state.token = action.payload.token;\r\n                state.status = 'succeeded';\r\n                state.error = null;\r\n            })\r\n            .addCase(registerUser.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload?.error || 'Registration failed';\r\n            })\r\n            .addCase(loginUser.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n                state.error = action.payload?.error || 'Login failed';\r\n            })\r\n            .addCase(registerUser.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(loginUser.pending, (state) => {\r\n                state.status = 'loading';\r\n            });\r\n    }\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}