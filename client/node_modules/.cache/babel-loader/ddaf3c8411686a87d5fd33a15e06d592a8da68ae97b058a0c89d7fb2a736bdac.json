{"ast":null,"code":"// src/redux/slices/authSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nfunction safeParseJSON(item) {\n  try {\n    return JSON.parse(item);\n  } catch {\n    // If parsing fails, remove the corrupted item and return null\n    localStorage.removeItem('user');\n    return null;\n  }\n}\n\n// Load token and user from localStorage safely\nconst token = localStorage.getItem('token') || null;\nconst user = safeParseJSON(localStorage.getItem('user'));\nconst initialState = {\n  user,\n  token,\n  status: 'idle',\n  error: null\n};\n\n// Async thunk for login\nexport const loginUser = createAsyncThunk('auth/loginUser', async ({\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/auth/login', {\n      email,\n      password\n    });\n    console.log('Login response:', response);\n    const {\n      token,\n      user,\n      error\n    } = response.data;\n    if (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n    if (!token || !user) {\n      return thunkAPI.rejectWithValue('Invalid login response');\n    }\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user)); // <--- Add this line\n\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return thunkAPI.rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\n\n// Async thunk for register\nexport const registerUser = createAsyncThunk('auth/registerUser', async ({\n  username,\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/auth/register', {\n      username,\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    // Save token and user to localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return thunkAPI.rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.status = 'idle';\n      state.error = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // login\n    .addCase(loginUser.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n\n    // register\n    .addCase(registerUser.pending, state => {\n      state.status = 'loading';\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","safeParseJSON","item","JSON","parse","localStorage","removeItem","token","getItem","user","initialState","status","error","loginUser","email","password","thunkAPI","response","post","console","log","data","rejectWithValue","setItem","stringify","_error$response","_error$response$data","registerUser","username","_error$response2","_error$response2$data","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/ENGINES/Desktop/ai-todo-app/client/src/redux/slices/authSlice.js"],"sourcesContent":["// src/redux/slices/authSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nfunction safeParseJSON(item) {\r\n  try {\r\n    return JSON.parse(item);\r\n  } catch {\r\n    // If parsing fails, remove the corrupted item and return null\r\n    localStorage.removeItem('user');\r\n    return null;\r\n  }\r\n}\r\n\r\n// Load token and user from localStorage safely\r\nconst token = localStorage.getItem('token') || null;\r\nconst user = safeParseJSON(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n  user,\r\n  token,\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\n// Async thunk for login\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/loginUser',\r\n  async ({ email, password }, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n      console.log('Login response:', response);\r\n      const { token, user, error } = response.data;\r\n\r\n      if (error) {\r\n        return thunkAPI.rejectWithValue(error);\r\n      }\r\n\r\n      if (!token || !user) {\r\n        return thunkAPI.rejectWithValue('Invalid login response');\r\n      }\r\n\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));  // <--- Add this line\r\n\r\n      return { token, user };\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response?.data?.error || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// Async thunk for register\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/registerUser',\r\n  async ({ username, email, password }, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      const { token, user } = response.data;\r\n      // Save token and user to localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return { token, user };\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(\r\n        error.response?.data?.error || 'Registration failed'\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.status = 'idle';\r\n      state.error = null;\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.status = 'loading';\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // register\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.status = 'loading';\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}